import time
import random
from support_file_system import System

cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10,
         11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10,
         11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10,
         11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
player_cards = []
bot_cards = []
player_score = []
bot_score = []

sys = System(player_score, bot_score, cards, player_cards, bot_cards)


class Bot:

    def __init__(self, bot_name, bot_cards, bot_score):
        self.name = bot_name
        self.card = bot_cards
        self.score = bot_score
        self.order = None
        self.bet = None
        for _ in range(2):
            bot_cards.append(sys.deal_card(cards))
        self.score = sys.calculate_score(bot_cards)

    def deal_more_cards(self):
        while self.score != 0 and self.score < 17:
            self.card.append(sys.deal_card(cards))
            self.score = sys.calculate_score(self.card)


class Player:
    def __init__(self, player_name, player_cards, player_score, money, bet):
        self.name = player_name
        self.money = money
        self.bet = bet
        self.card = player_cards
        self.score = player_score
        self.order = None
        for _ in range(2):
            player_cards.append(sys.deal_card(cards))
        self.score = sys.calculate_score(player_cards)

    def money_female_house(self):
        self.money = random.randint(1, 100)
        print(f'\nüç¨ T√∫i b·∫°n hi·ªán c√≥ {self.money} vi√™n k·∫πo üç¨')
        time.sleep(0.5)
        print('Hehe, h√£y s·ªëng s√≥t ƒë·∫øn cu·ªëi v√°n m√† c√≤n k·∫πo ƒë·ªÉ th·∫Øng nh√©! üòó')
        input("[Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c]")

    def deal_more_cards(self):
        self.score = sys.calculate_score(self.card)
        player_deal = input('üëâ B·∫°n mu·ªën r√∫t th√™m l√° n·ªØa? (Y/N)\n').lower()
        if player_deal == 'y':
            self.card.append(sys.deal_card(cards))
            self.score = sys.calculate_score(self.card)
        if player_deal == 'n' and len(self.card) == 4:
            sure = input('R√∫t th√™m 1 l√° n·ªØa ƒë·ªÉ Ng≈© linh ƒëi...ho·∫∑c ng·ªß lu√¥n.üíÄ (Y/N)\n').lower()
            if sure == 'n':
                return True
            elif sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
        if player_deal == 'n' and len(self.card) == 3:
            sure = input('R√∫t th√™m l√° n·ªØa ƒëi. √Ånh bi·∫øt b·∫°n mu·ªën r√∫t th√™m m√†üòè (Y/N)\n').lower()
            if sure == 'n':
                return True
            elif sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
        if player_deal == 'n' and len(self.card) == 2:
            sure = input('ƒê·ªãnh d·∫±n non √†? R√∫t th√™m l√° n·ªØa ƒëi. B·∫°n s·ª£ √†?üòè (Y/N)\n').lower()
            if sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
            elif sure == 'n':
                return True
        elif len(self.card) == 5:
            return True

    def deal_more_cards_female_house(self):
        self.score = sys.calculate_score(self.card)
        player_deal = input('üëâ B·∫°n n√™n r√∫t th√™m l√° n·ªØa? (Y/N)\n').lower()
        if player_deal == 'y':
            self.card.append(sys.deal_card(cards))
            self.score = sys.calculate_score(self.card)
        if player_deal == 'n' and len(self.card) == 4:
            sure = input('L·ª° Ng≈© linh sao nh·ªâ? N√™n r√∫t kh√¥ng? (Y/N) üòÄ\n').lower()
            if sure == 'n':
                return True
            elif sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
        elif player_deal == 'n' and len(self.card) == 3:
            sure = input('Th·∫•y c√≤n h∆°i √≠t l√°. R√∫t th√™m kh√¥ng? (Y/N) üòÄ\n').lower()
            if sure == 'n':
                return True
            elif sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
        elif player_deal == 'n' and len(self.card) == 2:
            sure = input('Ch∆∞a r√∫t th√™m l√° n√†o m√† nh·ªâ? R√∫t th√™m kh√¥ng? (Y/N) üòÄ\n').lower()
            if sure == 'y':
                self.card.append(sys.deal_card(cards))
                self.score = sys.calculate_score(self.card)
            elif sure == 'n':
                return True
        elif len(self.card) == 5:
            return True

    def bet_candy(self, money, alive):
        print(f'\nüç¨ T√∫i b·∫°n hi·ªán c√≥ {money} vi√™n k·∫πo üç¨')
        time.sleep(1)
        while alive:
            bet = int(input('S·ªë k·∫πo b·∫°n mu·ªën ƒë√°nh ƒë·ªïi: '))
            if bet > 200:
                print('B·∫°n gi·ª°n m·∫∑t h·∫£, g√¨ m√† c∆∞·ª£c b·∫±ng c·∫£ t√≠nh m·∫°ng th·∫ø? Cho c∆° h·ªôi l√†m l·∫°i ƒë√≥ üòë')
                time.sleep(0.5)
            elif bet <= 1:
                print("Haha, h√†i h∆∞·ªõc qu√°, ch·ªçn l·∫°i ƒëi üòë")
            elif bet >= money:
                print(f'M√°u ƒë√≥! B·∫°n ƒë√£ li·ªÅu m√¨nh c∆∞·ª£c {bet} vi√™n k·∫πo! D√π kh√¥ng ƒë·ªß üòÉ')
                self.bet = bet
                alive = False
            elif bet < money:
                print(f'B·∫°n ƒë√£ an to√†n c∆∞·ª£c {bet} vi√™n k·∫πo, n∆∞·ªõc ƒëi an to√†n ƒë·∫•y. üòä')
                self.bet = bet
                alive = False

class Mode:

    def choose_mode(self, mode):
        if mode > 4:
            print('Xin l·ªói, kh√¥ng ƒë·ªß √Ånh ƒë·ªÉ cho b·∫°n ch∆°i üòî\n')
            time.sleep(0.5)
            return True
        elif mode < 1:
            print('G√¨ m√† ƒë√≤i √¢m √Ånh v·∫≠y? Mu·ªën √Ånh t·ª´ c√µi √¢m l√™n ch∆°i c√πng √†?? üòà\n')
            time.sleep(0.5)
            return True
        else:
            print(f"üíÅ‚Äç‚ôÄÔ∏è B·∫°n ƒë√£ l·∫≠p s√≤ng X√¨ √Åch v·ªõi {mode} √Ånh! üíÅ‚Äç‚ôÄÔ∏è\n")
            time.sleep(1)
            return False
